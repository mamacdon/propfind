- function titleCase(s) {
- 	return s.replace(/\b([a-z])/g, function(c) {
- 		return c.toUpperCase();
- 	});
- }

// Renders a single test
mixin singleTest(result, methodName)
  - var passFailClass = result.pass ? "pass" : "fail";
  - var maybeHideClass = result.pass ? "hide" : "";
  li.result
    | #{methodName}
    span(class=["icon", passFailClass])
    code(class=maybeHideClass)
      if result.error
        div.error= result.error
      if result.response
        div(class=["response", passFailClass])
          div.status= result.response.statusCode 
          each value, header in result.response.headers
            div= titleCase(header) + ": " + value
          if result.body
            pre.body= result.body

// Output document
doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    title Exotic Request Methods
    style
      include results.css
  body
    h1 Exotic Request Methods
    p Testing against: 
      b
        tt #{url}
    each proto, protoName in protocols
      h2 #{protoName}
      ul
        each result, methodName in proto
          +singleTest(result, methodName)
    script.
        document.addEventListener("click", function(e) {
          var target = e.target;
          var resultNode = getAncestorWith(target, function(n) {
          	return n.classList && n.classList.contains("result");
          });
          if (resultNode) {
              // Result was clicked: show or hide the <code> element under it
              resultNode.querySelector("code").classList.toggle("hide");
          }
        })

        function getAncestorWith(node, predicate) {
        	for (; node && !predicate(node); node = node.parentNode);
        	return node;
        }